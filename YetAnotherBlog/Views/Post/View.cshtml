@model YetAnotherBlog.Models.ViewPostViewModel

@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = @Html.DisplayFor(model => model.Post.Title);
}

<h2>@Html.DisplayFor(model => model.Post.Title)</h2>

<div class="row">
    <hr />
    <div class="col-md-12">
        <div>
            @Html.DisplayFor(model => model.Post.Post)
            <hr />

            @if (Model.Post.Tags != null)
            {
                @Html.DisplayNameFor(model => model.Post.Tags) <text>:</text>
                @Html.DisplayFor(model => model.Post.Tags) <br />
            }

            <p class="post-time">Posted at: @Html.DisplayFor(model => model.Post.TimePosted)</p>

            @if (Model.Post.Edited == true)
            {
                <p class="post-time"><text>Last Edited:</text> @Html.DisplayFor(model => model.Post.LastEdited)</p>
            }

        </div>

        @if (Model.Post.AllowResponses == true)
        {
            <div>
                @await Html.PartialAsync("_ResponseForm", Model.UserResponse)
            </div>

            <div>
                @if (Model.Responses.Count > 0)
                {
                    <h3>Responses (@Html.DisplayFor(model => model.Responses.Count)) </h3>
                    @foreach (var response in Model.Responses)
                    {
                        <!-- Don't show hidden responses -->
                        @if (response.Hidden == false)
                        {
                             <div>
                                 <b>@response.PostedByName:</b> <span>Posted at: @response.DatePosted</span><br />
                    
                                 @response.Contents
                             </div>
                        }
                    }
                }
            </div>
        }
    </div>
</div>
<div>
    @if (User.IsInRole("Admin") || User.IsInRole("Poster")) {
        <a asp-action="Edit" asp-route-id="@Model.Post.Id">Edit</a> <text>|</text>
     }
    <a asp-action="Index">Back to List</a>
</div>
